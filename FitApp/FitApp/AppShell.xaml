<?xml version="1.0" encoding="UTF-8"?>
<Shell xmlns="http://xamarin.com/schemas/2014/forms" 
       xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
       xmlns:local="clr-namespace:FitApp.Views"
       xmlns:localExercise="clr-namespace:FitApp.Views.ExerciseView"
       xmlns:localFoodItem="clr-namespace:FitApp.Views.FoodItemView"
       xmlns:localMealFoodItem="clr-namespace:FitApp.Views.MealFoodItemView"
       xmlns:localMealUser="clr-namespace:FitApp.Views.UserView"
       xmlns:localMeal="clr-namespace:FitApp.Views.MealView"
       xmlns:localWorkout="clr-namespace:FitApp.Views.WorkoutView"
       xmlns:localWorkoutPlan="clr-namespace:FitApp.Views.WorkoutPlanView"
       xmlns:localWorkoutExercise="clr-namespace:FitApp.Views.WorkoutExerciseView"
       Title="FitApp"
       x:Class="FitApp.AppShell">

    <!--
        The overall app visual hierarchy is defined here, along with navigation.
    
        https://docs.microsoft.com/xamarin/xamarin-forms/app-fundamentals/shell/
    -->

    <Shell.Resources>
        
        <ResourceDictionary>
            <Style x:Key="FlyoutItemStyle" TargetType="Shell">
                <Setter Property="MenuItemTemplate">
                    <Setter.Value>
                        <DataTemplate>
                            <Grid BackgroundColor="#F2F2F2" Padding="10">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <Image Source="{Binding FlyoutItem.Icon}"
                                   HeightRequest="24"
                                   WidthRequest="24"
                                   VerticalOptions="Center" />
                                <Label Text="{Binding FlyoutItem.Title}"
                                   TextColor="#333333"
                                   FontFamily="Arial"
                                   FontSize="16"
                                   VerticalOptions="Center"
                                   Grid.Column="1" />
                            </Grid>
                        </DataTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="BaseStyle" TargetType="Element">
                <Setter Property="Shell.BackgroundColor" Value="{StaticResource Primary}" />
                <Setter Property="Shell.ForegroundColor" Value="White" />
                <Setter Property="Shell.TitleColor" Value="White" />
                <Setter Property="Shell.DisabledColor" Value="#B4FFFFFF" />
                <Setter Property="Shell.UnselectedColor" Value="#95FFFFFF" />
                <Setter Property="Shell.TabBarBackgroundColor" Value="{StaticResource Primary}" />
                <Setter Property="Shell.TabBarForegroundColor" Value="White"/>
                <Setter Property="Shell.TabBarUnselectedColor" Value="#95FFFFFF"/>
                <Setter Property="Shell.TabBarTitleColor" Value="White"/>
            </Style>
            <Style TargetType="TabBar" BasedOn="{StaticResource BaseStyle}" />
            <Style TargetType="FlyoutItem" BasedOn="{StaticResource BaseStyle}" />

            <!--
            Default Styles for all Flyout Items
            https://docs.microsoft.com/xamarin/xamarin-forms/app-fundamentals/shell/flyout#flyoutitem-and-menuitem-style-classes
            -->
            <Style Class="FlyoutItemLabelStyle" TargetType="Label">
                <Setter Property="TextColor" Value="White"></Setter>
            </Style>
            <Style Class="FlyoutItemLayoutStyle" TargetType="Layout" ApplyToDerivedTypes="True">
                <Setter Property="VisualStateManager.VisualStateGroups">
                    <VisualStateGroupList>
                        <VisualStateGroup x:Name="CommonStates">
                            <VisualState x:Name="Normal">
                                <VisualState.Setters>
                                    <Setter Property="BackgroundColor" Value="{x:OnPlatform UWP=Transparent, iOS=White}" />
                                    <Setter TargetName="FlyoutItemLabel" Property="Label.TextColor" Value="{StaticResource Primary}" />
                                </VisualState.Setters>
                            </VisualState>
                            <VisualState x:Name="Selected">
                                <VisualState.Setters>
                                    <Setter Property="BackgroundColor" Value="{StaticResource Primary}" />
                                </VisualState.Setters>
                            </VisualState>
                        </VisualStateGroup>
                    </VisualStateGroupList>
                </Setter>
            </Style>
            <!--
            Custom Style you can apply to any Flyout Item
            -->
            <Style Class="MenuItemLayoutStyle" TargetType="Layout" ApplyToDerivedTypes="True">
                <Setter Property="VisualStateManager.VisualStateGroups">
                    <VisualStateGroupList>
                        <VisualStateGroup x:Name="CommonStates">
                            <VisualState x:Name="Normal">
                                <VisualState.Setters>
                                    <Setter TargetName="FlyoutItemLabel" Property="Label.TextColor" Value="{StaticResource Primary}" />
                                </VisualState.Setters>
                            </VisualState>
                        </VisualStateGroup>
                    </VisualStateGroupList>
                </Setter>
            </Style>
        </ResourceDictionary>
    </Shell.Resources>

    <!-- 
        When the Flyout is visible this defines the content to display in the flyout.
        FlyoutDisplayOptions="AsMultipleItems" will create a separate flyout item for each child element    
        https://docs.microsoft.com/dotnet/api/xamarin.forms.shellgroupitem.flyoutdisplayoptions?view=xamarin-forms
    -->
    <FlyoutItem Title="Exercises" Icon="icon_feed.png">
        <ShellContent Route="ExercisePage" ContentTemplate="{DataTemplate localExercise:ExercisePage}" />
    </FlyoutItem>

    <FlyoutItem Title="Food Items" Icon="icon_feed.png">
        <ShellContent Route="FoodItemPage" ContentTemplate="{DataTemplate localFoodItem:FoodItemPage}" />
    </FlyoutItem>

    <FlyoutItem Title="Meal Food Items" Icon="icon_feed.png">
        <ShellContent Route="MealFoodItemPage" ContentTemplate="{DataTemplate localMealFoodItem:MealFoodItemPagePage}" />
    </FlyoutItem>

    <FlyoutItem Title="Users" Icon="icon_feed.png">
        <ShellContent Route="UserPage" ContentTemplate="{DataTemplate localMealUser:UserPage}" />
    </FlyoutItem>

    <FlyoutItem Title="Meals" Icon="icon_feed.png">
        <ShellContent Route="MealPage" ContentTemplate="{DataTemplate localMeal:MealPage}" /> 
    </FlyoutItem>

    <FlyoutItem Title="Workouts" Icon="icon_feed.png">
        <ShellContent Route="WorkoutPage" ContentTemplate="{DataTemplate localWorkout:WorkoutPage}" />
    </FlyoutItem>

    <FlyoutItem Title="Workout Plans" Icon="icon_feed.png">
        <ShellContent Route="WorkoutPlanPage" ContentTemplate="{DataTemplate localWorkoutPlan:WorkoutPlanPage}" />
    </FlyoutItem>

    <FlyoutItem Title="Workout Exercise" Icon="icon_feed.png">
        <ShellContent Route="WorkoutExercisePage" ContentTemplate="{DataTemplate localWorkoutExercise:WorkoutExercisePage}" />
    </FlyoutItem>
    
    <FlyoutItem Title="About" Icon="icon_about.png">
        <ShellContent Route="AboutPage" ContentTemplate="{DataTemplate local:AboutPage}" />
    </FlyoutItem>

    <!-- When the Flyout is visible this will be a menu item you can tie a click behavior to  -->
    <MenuItem Text="Logout" StyleClass="MenuItemLayoutStyle" Clicked="OnMenuItemClicked">
    </MenuItem>

    <!--
        TabBar lets you define content that won't show up in a flyout menu. When this content is active
        the flyout menu won't be available. This is useful for creating areas of the application where 
        you don't want users to be able to navigate away from. If you would like to navigate to this 
        content you can do so by calling 
        await Shell.Current.GoToAsync("//LoginPage");
    -->
    <TabBar>
        <ShellContent Route="LoginPage" ContentTemplate="{DataTemplate local:LoginPage}" />
    </TabBar>

    <!-- Optional Templates 
    // These may be provided inline as below or as separate classes.

    // This header appears at the top of the Flyout.
    // https://docs.microsoft.com/xamarin/xamarin-forms/app-fundamentals/shell/flyout#flyout-header
    <Shell.FlyoutHeaderTemplate>
        <DataTemplate>
            <Grid>ContentHere</Grid>
        </DataTemplate>
    </Shell.FlyoutHeaderTemplate>

    // ItemTemplate is for ShellItems as displayed in a Flyout
    // https://docs.microsoft.com/xamarin/xamarin-forms/app-fundamentals/shell/flyout#define-flyoutitem-appearance
    <Shell.ItemTemplate>
        <DataTemplate>
            <ContentView>
                Bindable Properties: Title, Icon
            </ContentView>
        </DataTemplate>
    </Shell.ItemTemplate>

    // MenuItemTemplate is for MenuItems as displayed in a Flyout
    // https://docs.microsoft.com/xamarin/xamarin-forms/app-fundamentals/shell/flyout#define-menuitem-appearance
    <Shell.MenuItemTemplate>
        <DataTemplate>
            <ContentView>
                Bindable Properties: Text, Icon
            </ContentView>
        </DataTemplate>
    </Shell.MenuItemTemplate>

    -->

</Shell>
