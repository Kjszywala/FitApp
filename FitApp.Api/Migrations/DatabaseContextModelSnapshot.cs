// <auto-generated />
using System;
using FitApp.Api.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FitApp.Api.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    partial class DatabaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("FitApp.Api.Models.Exercises", b =>
                {
                    b.Property<int>("ExerciseID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ExerciseID"), 1L, 1);

                    b.Property<string>("ExerciseDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExerciseName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExerciseType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MuscleGroup")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ExerciseID");

                    b.ToTable("Exercises");
                });

            modelBuilder.Entity("FitApp.Api.Models.FoodItems", b =>
                {
                    b.Property<int>("FoodItemID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FoodItemID"), 1L, 1);

                    b.Property<string>("FoodItemCalories")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FoodItemDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FoodItemName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("FoodItemID");

                    b.ToTable("FoodItems");
                });

            modelBuilder.Entity("FitApp.Api.Models.MealFoodItems", b =>
                {
                    b.Property<int>("MyProperty")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MyProperty"), 1L, 1);

                    b.Property<int?>("FoodItemID")
                        .HasColumnType("int");

                    b.Property<int?>("MealID")
                        .HasColumnType("int");

                    b.Property<string>("ServingSize")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ServingsPerMeal")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MyProperty");

                    b.HasIndex("FoodItemID");

                    b.HasIndex("MealID");

                    b.ToTable("MealFoodItems");
                });

            modelBuilder.Entity("FitApp.Api.Models.Meals", b =>
                {
                    b.Property<int>("MealID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MealID"), 1L, 1);

                    b.Property<string>("MealCalories")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MealDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MealName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UserID")
                        .HasColumnType("int");

                    b.HasKey("MealID");

                    b.HasIndex("UserID");

                    b.ToTable("Meals");
                });

            modelBuilder.Entity("FitApp.Api.Models.WorkoutExercises", b =>
                {
                    b.Property<int>("WorkoutExerciseID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("WorkoutExerciseID"), 1L, 1);

                    b.Property<int?>("ExerciseID")
                        .HasColumnType("int");

                    b.Property<string>("Reps")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sets")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Weight")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("WorkoutID")
                        .HasColumnType("int");

                    b.HasKey("WorkoutExerciseID");

                    b.HasIndex("ExerciseID");

                    b.HasIndex("WorkoutID");

                    b.ToTable("WorkoutExercises");
                });

            modelBuilder.Entity("FitApp.Api.Models.Workouts", b =>
                {
                    b.Property<int>("WorkoutID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("WorkoutID"), 1L, 1);

                    b.Property<int?>("PlanID")
                        .HasColumnType("int");

                    b.Property<string>("WorkoutDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WorkoutDifficulty")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WorkoutDuration")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WorkoutName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("WorkoutID");

                    b.HasIndex("PlanID");

                    b.ToTable("Workouts");
                });

            modelBuilder.Entity("FitApp.Models.Users", b =>
                {
                    b.Property<int>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserID"), 1L, 1);

                    b.Property<string>("ActivityLevel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Height")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UsersUserID")
                        .HasColumnType("int");

                    b.Property<decimal>("Weight")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("UserID");

                    b.HasIndex("UsersUserID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("FitApp.Models.WorkoutPlans", b =>
                {
                    b.Property<int>("PlanId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PlanId"), 1L, 1);

                    b.Property<string>("PlanDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlanDifficulty")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlanDuration")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlanName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UserID")
                        .HasColumnType("int");

                    b.HasKey("PlanId");

                    b.HasIndex("UserID");

                    b.ToTable("WorkoutPlans");
                });

            modelBuilder.Entity("FitApp.Api.Models.MealFoodItems", b =>
                {
                    b.HasOne("FitApp.Api.Models.FoodItems", "FoodItem")
                        .WithMany("MealFoodItems")
                        .HasForeignKey("FoodItemID");

                    b.HasOne("FitApp.Api.Models.Meals", "Meal")
                        .WithMany("MealFoodItems")
                        .HasForeignKey("MealID");

                    b.Navigation("FoodItem");

                    b.Navigation("Meal");
                });

            modelBuilder.Entity("FitApp.Api.Models.Meals", b =>
                {
                    b.HasOne("FitApp.Models.Users", "User")
                        .WithMany("Meals")
                        .HasForeignKey("UserID");

                    b.Navigation("User");
                });

            modelBuilder.Entity("FitApp.Api.Models.WorkoutExercises", b =>
                {
                    b.HasOne("FitApp.Api.Models.Exercises", "Exercise")
                        .WithMany("WorkoutExercises")
                        .HasForeignKey("ExerciseID");

                    b.HasOne("FitApp.Api.Models.Workouts", "Workout")
                        .WithMany("WorkoutExercises")
                        .HasForeignKey("WorkoutID");

                    b.Navigation("Exercise");

                    b.Navigation("Workout");
                });

            modelBuilder.Entity("FitApp.Api.Models.Workouts", b =>
                {
                    b.HasOne("FitApp.Models.WorkoutPlans", "Plan")
                        .WithMany("Workouts")
                        .HasForeignKey("PlanID");

                    b.Navigation("Plan");
                });

            modelBuilder.Entity("FitApp.Models.Users", b =>
                {
                    b.HasOne("FitApp.Models.Users", null)
                        .WithMany("WorkoutPlans")
                        .HasForeignKey("UsersUserID");
                });

            modelBuilder.Entity("FitApp.Models.WorkoutPlans", b =>
                {
                    b.HasOne("FitApp.Models.Users", "User")
                        .WithMany()
                        .HasForeignKey("UserID");

                    b.Navigation("User");
                });

            modelBuilder.Entity("FitApp.Api.Models.Exercises", b =>
                {
                    b.Navigation("WorkoutExercises");
                });

            modelBuilder.Entity("FitApp.Api.Models.FoodItems", b =>
                {
                    b.Navigation("MealFoodItems");
                });

            modelBuilder.Entity("FitApp.Api.Models.Meals", b =>
                {
                    b.Navigation("MealFoodItems");
                });

            modelBuilder.Entity("FitApp.Api.Models.Workouts", b =>
                {
                    b.Navigation("WorkoutExercises");
                });

            modelBuilder.Entity("FitApp.Models.Users", b =>
                {
                    b.Navigation("Meals");

                    b.Navigation("WorkoutPlans");
                });

            modelBuilder.Entity("FitApp.Models.WorkoutPlans", b =>
                {
                    b.Navigation("Workouts");
                });
#pragma warning restore 612, 618
        }
    }
}
